   @PACKAGE_INIT@

## Find packages
if(NOT TARGET Vulkan::Vulkan)
find_package(Vulkan REQUIRED FATAL_ERROR)
endif()

if (NOT TARGET shaderc)
## ShaderC
find_path(shaderc_INCLUDE_DIR
    NAMES shaderc/shaderc.h
    HINTS "$ENV{VULKAN_SDK}/include")
find_library(shaderc_LIBRARY
    NAMES shaderc_combined
    HINTS "$ENV{VULKAN_SDK}/lib")

add_library(shaderc STATIC IMPORTED)
set_target_properties(shaderc PROPERTIES IMPORTED_LOCATION_RELEASE "$ENV{VULKAN_SDK}/lib/shaderc_combined.lib")
set_target_properties(shaderc PROPERTIES IMPORTED_LOCATION_DEBUG "$ENV{VULKAN_SDK}/lib/shaderc_combinedd.lib")
set_target_properties(shaderc PROPERTIES IMPORTED_LOCATION_MINSIZEREL "$ENV{VULKAN_SDK}/lib/shaderc_combined.lib")
set_target_properties(shaderc PROPERTIES IMPORTED_LOCATION_RELWITHDEBINFO "$ENV{VULKAN_SDK}/lib/shaderc_combined.lib")
set_target_properties(shaderc PROPERTIES INTERFACE_INCLUDE_DIRECTORIES "${shaderc_INCLUDE_DIR}")
endif()

if(NOT TARGET glm::glm)
find_package(glm REQUIRED FATAL_ERROR)
endif()

if(NOT TARGET glfw)
find_package(glfw3 REQUIRED FATAL_ERROR)
endif()

## Include libraries
if(NOT TARGET EDL::Externals)
    include(${CMAKE_CURRENT_LIST_DIR}/edl-externals-targets.cmake)
endif()

if(NOT TARGET EDL::Debug)
    include(${CMAKE_CURRENT_LIST_DIR}/edl-debug-targets.cmake)
endif()

if(NOT TARGET EDL::Util)
    include(${CMAKE_CURRENT_LIST_DIR}/edl-util-targets.cmake)
endif()

if(NOT TARGET EDL::Vulkan)
    include(${CMAKE_CURRENT_LIST_DIR}/edl-vulkan-targets.cmake)
endif()

if(NOT TARGET EDL::Graphics)
    include(${CMAKE_CURRENT_LIST_DIR}/edl-graphics-targets.cmake)
endif()